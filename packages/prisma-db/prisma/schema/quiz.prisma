model Syllabus {
    id            String   @id @default(cuid()) @map("_id")
    topics        Topic[]

    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt


    projectId     String  @unique
    project       GithubProject @relation(fields: [projectId], references: [id], onDelete: Cascade)
     
    @@schema("gitgrasp_schema")
}

model Topic {
    id            String   @id @default(cuid()) @map("_id")
    name          String
    description   String
    quizzes       Quiz[]
    level         Int
    subTopic      String
    language      String
    framework     String

    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt

    syllabusId    String
    syllabus      Syllabus @relation(fields: [syllabusId], references: [id], onDelete: Cascade)

    @@schema("gitgrasp_schema")
}

model Quiz {
    id            String   @id @default(cuid()) @map("_id")
    level         Int
    type          String
    questions     QuizQuestion[]

    score         Int?
    scoreMax      Int?

    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt

    topicId       String
    topic         Topic @relation(fields: [topicId], references: [id], onDelete: Cascade)

    userId        String
    user          User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@schema("gitgrasp_schema")
}

model QuizQuestion {
    id            String   @id @default(cuid()) @map("_id")
    question      String
    answer        String

    chosenAnswer       String?
    isCorrect          Boolean               @default(false)

    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt

    quizId        String
    quiz          Quiz @relation(fields: [quizId], references: [id], onDelete: Cascade)

    @@schema("gitgrasp_schema")
    
}