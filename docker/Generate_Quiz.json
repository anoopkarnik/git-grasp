{
  "name": "Generate Quiz",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "generate-quiz",
        "responseMode": "lastNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -20,
        -160
      ],
      "id": "f081288b-781c-4669-8ad1-5f00b59aee10",
      "name": "Create Quiz Webhook",
      "webhookId": "3627b6d1-2af7-425d-b361-2c3a4f43e392"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.body.type }}",
                    "rightValue": "subjective",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "cc84200c-9ec4-4aff-9bed-63777a397e23"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Subjective"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a6dadaf5-56bd-4ab3-8bb6-7bec0617c0e2",
                    "leftValue": "={{ $json.body.type }}",
                    "rightValue": "multiple_choice",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Multiple Choice"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        200,
        -160
      ],
      "id": "007d5775-1764-48a7-947b-23313acc7187",
      "name": "Type of Quiz"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT * \nFROM quiz_schema.\"Topic\" \nWHERE _id = ANY(ARRAY[{{ $json.body.topicIds.map(id => `'${id}'`).join(\",\") }}]::text[])\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        420,
        -360
      ],
      "id": "63d1917a-64b7-4c34-9aa3-5695759c91ef",
      "name": "Get Topic Descriptions",
      "credentials": {
        "postgres": {
          "id": "KkozY7WBDq2aMUhk",
          "name": "Gitgrasp Cloud Database"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "gpt-4o"
        },
        "options": {
          "responseFormat": "json_object"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        668,
        -240
      ],
      "id": "4692a12d-c661-47d6-a959-68fe5828293b",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "XRuXkSB2mk3HQo6w",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n     \"Topic\": \"Theming & Styling\",\n     \"Subtopic\": \"Tailwind Configuration\",\n     \"Description\": \"Custom Tailwind CSS configuration files defining color palettes, dark mode, and global styles.\",\n     \"Difficulty Level\": 5,\n     \"Total Questions\" : 1,\n     \"Questions\": [\n       {\n      \"Type\": \"subjective\" ,\n      \"Marks\": \"5\",\n      \"Question\": \"\" ,\n      \"Answer\": \"\" \n       }\n     ]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        788,
        -240
      ],
      "id": "b140fa16-306d-41ca-bd4d-c7817ae6cb3c",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.Questions",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1016,
        -360
      ],
      "id": "de6b71c5-188b-4e8b-84d0-67c6a12988d2",
      "name": "Split Out Questions"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "value": "quiz_schema",
          "mode": "list",
          "cachedResultName": "quiz_schema"
        },
        "table": {
          "__rl": true,
          "value": "QuizQuestion",
          "mode": "list",
          "cachedResultName": "QuizQuestion"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "_id": "={{ Math.random().toString(36)}}",
            "question": "={{ $json.Question }}",
            "answer": "={{ $json.Answer }}",
            "createdAt": "={{ $now }}",
            "updatedAt": "={{ $now}}",
            "quizId": "={{ $('Create Quiz Webhook').item.json.body.quizId }}",
            "type": "=subjective",
            "scoreMax": "={{ $json.Marks }}",
            "topicId": "={{ $('Get Topic Descriptions').item.json._id }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "_id",
              "displayName": "_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "question",
              "displayName": "question",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "answer",
              "displayName": "answer",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "type",
              "displayName": "type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "chosenAnswer",
              "displayName": "chosenAnswer",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "score",
              "displayName": "score",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "scoreMax",
              "displayName": "scoreMax",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "createdAt",
              "displayName": "createdAt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "updatedAt",
              "displayName": "updatedAt",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "quizId",
              "displayName": "quizId",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "options",
              "displayName": "options",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "array",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "topicId",
              "displayName": "topicId",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        1236,
        -360
      ],
      "id": "a7b1a2d3-05d0-459e-8638-9c5a5f5e028f",
      "name": "Create Quiz Question",
      "credentials": {
        "postgres": {
          "id": "KkozY7WBDq2aMUhk",
          "name": "Gitgrasp Cloud Database"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT * \nFROM quiz_schema.\"Topic\" \nWHERE _id = ANY(ARRAY[{{ $json.body.topicIds.map(id => `'${id}'`).join(\",\") }}]::text[])\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        420,
        40
      ],
      "id": "bb349264-ad9f-4dee-a312-c62060128027",
      "name": "Get Topic Descriptions1",
      "credentials": {
        "postgres": {
          "id": "KkozY7WBDq2aMUhk",
          "name": "Gitgrasp Cloud Database"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "gpt-4o"
        },
        "options": {
          "responseFormat": "json_object"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        560,
        280
      ],
      "id": "206d5472-e344-4c1a-913d-c713acfa5ca5",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "XRuXkSB2mk3HQo6w",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"Topic\": \"Algebra\",\n  \"Subtopic\": \"Quadratic Equations\",\n  \"Description\": \"This subtopic covers the formulation, solution, and application of quadratic equations.\",\n  \"Difficulty Level\": 7,\n  \"Total Questions\": 1,\n  \"Questions\": [\n    {\n      \"Type\": \"Multiple Choice\",\n      \"Marks\": 3,\n      \"Question\": \"What is the discriminant of the quadratic equation x² - 4x + 3 = 0?\",\n      \"Options\": [\n        \"10\",\n        \"4\",\n        \"1\",\n        \"16\"\n      ],\n      \"Answer\": \"4\"\n    }\n  ]\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        788,
        260
      ],
      "id": "e08f0827-9f66-45c6-add8-d112b631472a",
      "name": "Structured Output Parser1"
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.Questions",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1016,
        40
      ],
      "id": "4fc1c4ec-28a6-4896-9ba1-423901d6f60c",
      "name": "Split Out Questions1"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "value": "quiz_schema",
          "mode": "list",
          "cachedResultName": "quiz_schema"
        },
        "table": {
          "__rl": true,
          "value": "QuizQuestion",
          "mode": "list",
          "cachedResultName": "QuizQuestion"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "_id": "={{ Math.random().toString(36)}}",
            "question": "={{ $json.Question }}",
            "answer": "={{ $json.Answer }}",
            "createdAt": "={{ $now }}",
            "updatedAt": "={{ $now}}",
            "quizId": "={{ $('Create Quiz Webhook').item.json.body.quizId }}",
            "type": "=multiple_choice",
            "scoreMax": "={{ $json.Marks }}",
            "topicId": "={{ $('Get Topic Descriptions1').item.json._id }}",
            "options": "={{ $json.Options}}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "_id",
              "displayName": "_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "question",
              "displayName": "question",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "answer",
              "displayName": "answer",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "type",
              "displayName": "type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "chosenAnswer",
              "displayName": "chosenAnswer",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "score",
              "displayName": "score",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "scoreMax",
              "displayName": "scoreMax",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "createdAt",
              "displayName": "createdAt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "updatedAt",
              "displayName": "updatedAt",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "quizId",
              "displayName": "quizId",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "options",
              "displayName": "options",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "array",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "topicId",
              "displayName": "topicId",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        1236,
        40
      ],
      "id": "92e0c221-9f45-44c1-93e3-c62268bc4984",
      "name": "Create Quiz Question1",
      "credentials": {
        "postgres": {
          "id": "KkozY7WBDq2aMUhk",
          "name": "Gitgrasp Cloud Database"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=### Inputs:\n- **Topic Name**: {{ $json.name }}\n- **Subtopic Name**: {{ $json.subTopic }}\n- **Subtopic Description**: {{ $json.description }}\n- **Difficulty Level (1 to 10)**: {{ $json.level }}\n- **Number of Questions Required**: {{ $('Create Quiz Webhook').item.json.body.totalQuestions }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=# Overview\n\nYou are a smart **Multiple Choice Question (MCQ) Paper Generator AI**.\n\nYour task is to create a set of high-quality, well-structured multiple choice questions (MCQs) based on the following inputs:\n\n## Inputs\n\n- **Topic Name**: [Insert Main Topic]\n- **Subtopic Name**: [Insert Subtopic Name]\n- **Subtopic Description**: [Briefly describe the subtopic]\n- **Difficulty Level (1 to 10)**: [Enter number]\n- **Number of Questions Required**: [Enter total number of questions]\n\n---\n\n## Output Instructions\n\n1. **Output Format**  \n   Output ONLY a single JSON object, structured as shown:\n\n   ```json\n   {\n     \"Topic\": \"\",\n     \"Subtopic\": \"\",\n     \"Description\": \"\",\n     \"Difficulty Level\": ,\n     \"Total Questions\": ,\n     \"Questions\": [\n       {\n         \"Type\": \"Multiple Choice\",\n         \"Marks\": ,\n         \"Question\": \"\",\n         \"Options\": [\"\", \"\", \"\", \"\"],\n         \"Answer\": \"\"\n       }\n     ]\n   }\n\n2. **Question Construction**\n\n    Every question must be Multiple Choice (MCQ) with exactly four options.\n    Only one correct answer per question. Mark the correct answer clearly.\n    Assign appropriate marks:\n        Easy = 1 mark, Medium = 2–3 marks, Hard = 4–5 marks (align with provided difficulty).\n    Vary questions by conceptual depth and real-life application, based on difficulty.\n    Randomize the placement of the correct answer among options.\n\n3. **Options & Explanations**\n\n    Ensure all four options are plausible, not trivial distractors.\n    Explanation (optional but recommended): Briefly clarify why the answer is correct or point out a common misconception.\n\n4. **Bloom’s Taxonomy & Clarity**\n\n    Cover a range of skills: Remember, Understand, Apply, Analyze.\n    Use clear, student-friendly language.\n    Avoid ambiguity in both questions and options.\n\n## Sample Output\n\n{\n  \"Topic\": \"Algebra\",\n  \"Subtopic\": \"Quadratic Equations\",\n  \"Description\": \"This subtopic covers the formulation, solution, and application of quadratic equations.\",\n  \"Difficulty Level\": 7,\n  \"Total Questions\": 3,\n  \"Questions\": [\n    {\n      \"Type\": \"Multiple Choice\",\n      \"Marks\": 3,\n      \"Question\": \"What is the discriminant of the quadratic equation x² - 4x + 3 = 0?\",\n      \"Options\": [\n        \"10\",\n        \"4\",\n        \"1\",\n        \"16\"\n      ],\n      \"Answer\": \"4\"\n    },\n    {\n      \"Type\": \"Multiple Choice\",\n      \"Marks\": 4,\n      \"Question\": \"Which of the following quadratic equations has two distinct real roots?\",\n      \"Options\": [\n        \"x² + 2x + 1 = 0\",\n        \"x² - 5x + 6 = 0\",\n        \"x² + 4x + 4 = 0\",\n        \"x² + x + 1 = 0\"\n      ],\n      \"Answer\": \"x² - 5x + 6 = 0\"\n    },\n    {\n\n      \"Type\": \"Multiple Choice\",\n      \"Marks\": 5,\n      \"Question\": \"If the sum and product of the roots of a quadratic are 7 and 12, respectively, what is the equation?\",\n      \"Options\": [\n        \"x² - 7x + 12 = 0\",\n        \"x² + 7x + 12 = 0\",\n        \"x² - 12x + 7 = 0\",\n        \"x² + 12x - 7 = 0\"\n      ],\n      \"Answer\": \"x² - 7x + 12 = 0\"\n    }\n  ]\n}\n\n## Final Notes\n\n    Output only the JSON object—no commentary or formatting outside JSON.\n    Double-check all answer keys and explanations.\n    Mix conceptual, application-based, and tricky MCQs for a rich test."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        640,
        40
      ],
      "id": "82c5f067-eadc-4120-b0f3-7f08ffb93a1f",
      "name": "Generate MCQ Quiz Agent"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=### Inputs:\n- **Topic Name**: {{ $json.name }}\n- **Subtopic Name**: {{ $json.subTopic }}\n- **Subtopic Description**: {{ $json.description }}\n- **Difficulty Level (1 to 10)**: {{ $json.level }}\n- **Number of Questions Required**: {{ $('Create Quiz Webhook').item.json.body.totalQuestions }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=You are a smart Question Paper Generator AI.\n\nYour task is to create a **set of well-structured short and long answer questions** based on the following inputs:\n\n### Inputs:\n- **Topic Name**: [Insert Main Topic]\n- **Subtopic Name**: [Insert Subtopic Name]\n- **Subtopic Description**: [Briefly describe the subtopic]\n- **Difficulty Level (1 to 10)**: [Enter number]\n- **Number of Questions Required**: [Enter total number of questions]\n\n### Output Instructions:\n1. Output Format:\n  {\n     \"Topic\": ,\n     \"Subtopic\": ,\n     \"Description\": ,\n     \"Difficulty Level\": ,\n     \"Total Questions\" : ,\n     \"Questions\": [\n       {\n      \"Type\": ,\n      \"Marks\": ,\n      \"Question\": ,\n      \"Answer\": \n       }\n     ]\n\n  }\n2. **Mix of Short and Long Answer Questions**:\n   - Divide the number of questions equally (or nearly equally) between short and long.\n   - Adjust question complexity according to the difficulty level.\n   - Use difficulty level to determine how conceptually deep or application-based each question is.\n\n3. **Question Format**:\n   - Each question should be numbered.\n   - Include the **question type**: Short or Long Answer.\n   - Assign **appropriate marks**: \n     - Short Answer = 2 or 3 marks \n     - Long Answer = 5 to 10 marks depending on difficulty\n\n4. **Question Clarity & Bloom’s Taxonomy**:\n   - Ensure questions assess a range of cognitive skills (Remember, Understand, Apply, Analyze, Evaluate, Create).\n   - Maintain clear, student-friendly language.\n\n5. **Output Format Example**:\n  {\n  \"Topic\": \"Algebra\",\n  \"Subtopic\": \"Quadratic Equations\",\n  \"Description\": \"This subtopic covers the formulation, solution, and application of quadratic equations.\",\n  \"Difficulty Level\": 7,\n  \"Total Questions\": 6,\n  \"Questions\": [\n    {\n      \"Type\": \"Short Answer\",\n      \"Marks\": 3,\n      \"Question\": \"Explain how the discriminant determines the nature of roots in a quadratic equation.\",\n      \"Answer\": \"The discriminant (D) of a quadratic equation ax² + bx + c = 0 is D = b² - 4ac. If D > 0: two real and distinct roots. If D = 0: two real and equal roots. If D < 0: two complex roots.\"\n    },\n    {\n      \"Type\": \"Short Answer\",\n      \"Marks\": 2,\n      \"Question\": \"Write the standard form of a quadratic equation and give one example.\",\n      \"Answer\": \"The standard form is ax² + bx + c = 0. Example: 2x² - 3x + 1 = 0\"\n    },\n    {\n      \"Type\": \"Long Answer\",\n      \"Marks\": 5,\n      \"Question\": \"Solve the equation x² - 5x + 6 = 0 and interpret its solution graphically.\",\n      \"Answer\": \"Factoring: x² - 5x + 6 = (x - 2)(x - 3) = 0. So, x = 2 and x = 3. Graphically, these are the x-intercepts of the parabola y = x² - 5x + 6.\"\n    },\n    {\n      \"Type\": \"Long Answer\",\n      \"Marks\": 7,\n      \"Question\": \"A projectile follows the path y = -x² + 4x. Find its maximum height.\",\n      \"Answer\": \"Vertex form: y = -x² + 4x → complete the square: y = -(x² - 4x) = -(x² - 4x + 4 - 4) = -((x - 2)² - 4) = - (x - 2)² + 4. So, vertex is at (2, 4), maximum height = 4 units.\"\n    },\n    {\n      \"Type\": \"Short Answer\",\n      \"Marks\": 3,\n      \"Question\": \"What does 'completing the square' mean in solving a quadratic equation?\",\n      \"Answer\": \"It means rewriting a quadratic into a perfect square form like (x + p)² = q to solve it easily.\"\n    },\n    {\n      \"Type\": \"Long Answer\",\n      \"Marks\": 10,\n      \"Question\": \"A ball is thrown upward with initial velocity 20 m/s from ground level. Using s = ut - ½gt², when will it hit the ground?\",\n      \"Answer\": \"Set s = 0, u = 20 m/s, g = 9.8 m/s². 0 = 20t - ½ × 9.8 × t² → 0 = t(20 - 4.9t) → t = 0 (start), t = 20 / 4.9 ≈ 4.08 seconds. Ball hits the ground after ~4.08 seconds.\"\n    }\n  ]\n}\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        640,
        -460
      ],
      "id": "aa36955e-5a92-4f4e-ba75-bacd8ff07092",
      "name": "Generate Subjective Quiz Agent"
    }
  ],
  "pinData": {
    "Create Quiz Webhook": [
      {
        "json": {
          "headers": {
            "host": "n8n.bsamaritan.net",
            "user-agent": "axios/1.8.4",
            "content-length": "158",
            "accept": "application/json, text/plain, */*",
            "accept-encoding": "gzip, br",
            "cdn-loop": "cloudflare; loops=1",
            "cf-connecting-ip": "183.82.232.82",
            "cf-ipcountry": "IN",
            "cf-ray": "95df7c229a377f3e-MAA",
            "cf-visitor": "{\"scheme\":\"https\"}",
            "cf-warp-tag-id": "e5f0655a-6ee5-404e-a67c-14d114f0bc98",
            "connection": "keep-alive",
            "content-type": "application/json",
            "x-forwarded-for": "183.82.232.82",
            "x-forwarded-proto": "https"
          },
          "params": {},
          "query": {},
          "body": {
            "topicIds": [
              "0.ymbmyohybs",
              "0.s8c5d0v2dle",
              "0.p0d8ls27pjf",
              "0.9ldlaniln3o"
            ],
            "totalQuestions": 2,
            "type": "multiple_choice",
            "quizId": "cmd01goil0003sw0iye0rd0gh"
          },
          "webhookUrl": "https://n8n.bsamaritan.net/webhook/generate-quiz",
          "executionMode": "production"
        }
      }
    ]
  },
  "connections": {
    "Create Quiz Webhook": {
      "main": [
        [
          {
            "node": "Type of Quiz",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Type of Quiz": {
      "main": [
        [
          {
            "node": "Get Topic Descriptions",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Topic Descriptions1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Topic Descriptions": {
      "main": [
        [
          {
            "node": "Generate Subjective Quiz Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Generate Subjective Quiz Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Generate Subjective Quiz Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Split Out Questions": {
      "main": [
        [
          {
            "node": "Create Quiz Question",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Quiz Question": {
      "main": [
        []
      ]
    },
    "Get Topic Descriptions1": {
      "main": [
        [
          {
            "node": "Generate MCQ Quiz Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Generate MCQ Quiz Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "Generate MCQ Quiz Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Split Out Questions1": {
      "main": [
        [
          {
            "node": "Create Quiz Question1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate MCQ Quiz Agent": {
      "main": [
        [
          {
            "node": "Split Out Questions1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Subjective Quiz Agent": {
      "main": [
        [
          {
            "node": "Split Out Questions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "e3ba8100-9989-4481-bf14-ccf80f46cbb5",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "558d88703fb65b2d0e44613bc35916258b0f0bf983c5d4730c00c424b77ca36a"
  },
  "id": "kZu64BuNRsibu3wC",
  "tags": []
}