{
  "name": "Generate Syllabus",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "c0a889f3-3256-4a75-a4b6-067413917ee3",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        0,
        0
      ],
      "id": "ed9142e5-f9a0-40dd-85d2-c12c08845266",
      "name": "Webhook",
      "webhookId": "c0a889f3-3256-4a75-a4b6-067413917ee3"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "value": "github_schema",
          "mode": "list",
          "cachedResultName": "github_schema"
        },
        "table": {
          "__rl": true,
          "value": "SourceCodeEmbedding",
          "mode": "list",
          "cachedResultName": "SourceCodeEmbedding"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "projectId",
              "value": "={{ $json.projectId }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        440,
        0
      ],
      "id": "ec2c503d-c406-4e6d-b0d0-1228abf3b675",
      "name": "Get all Files from a Repo",
      "alwaysOutputData": false,
      "credentials": {
        "postgres": {
          "id": "KkozY7WBDq2aMUhk",
          "name": "Gitgrasp Cloud Database"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.data",
        "include": "allOtherFields",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1632,
        0
      ],
      "id": "0b6e9930-375f-4384-9c6c-f5a28a76dd0d",
      "name": "Split Out"
    },
    {
      "parameters": {
        "fieldToSplitOut": "['output.data'].subTopics",
        "include": "allOtherFields",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1852,
        0
      ],
      "id": "40d2ad7a-2e92-4e21-8178-bc67fecdc2e4",
      "name": "Split Out1"
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "output"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1036,
        0
      ],
      "id": "c80d0cb1-d3f1-4522-b963-95d0e6199fa5",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Code: {{ $json.sourceCode }}",
        "options": {
          "systemMessage": "You are a code explainer agent. Summarize what the following file does. Be concise but informative."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        660,
        0
      ],
      "id": "c21c3af6-23dd-460f-8181-6973d14c9df5",
      "name": "Code Explainer Agent"
    },
    {
      "parameters": {
        "model": "deepseek-coder:6.7b",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        520,
        300
      ],
      "id": "0aae9d82-3e03-4b63-8983-80a50d7e18b3",
      "name": "Deepseek-coder:6.7b",
      "credentials": {
        "ollamaApi": {
          "id": "xHuYe0MDGOs9IpBW",
          "name": "Local Ollama service"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "value": "quiz_schema",
          "mode": "list",
          "cachedResultName": "quiz_schema"
        },
        "table": {
          "__rl": true,
          "value": "Topic",
          "mode": "list",
          "cachedResultName": "Topic"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "level": "={{ $json['[\\'output.data\\'].subTopics'].level }}",
            "_id": "={{ Math.random().toString(36)}}",
            "name": "={{ $json['output.data'].topic }}",
            "description": "={{ $json['[\\'output.data\\'].subTopics'].description }}",
            "updatedAt": "={{ $now }}",
            "createdAt": "={{ $now }}",
            "syllabusId": "={{ $('Create Syllabus').item.json._id }}",
            "framework": "={{ $json['output.data'].framework }}",
            "language": "={{ $json['output.data'].language }}",
            "subTopic": "={{ $json['[\\'output.data\\'].subTopics'].subTopic }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "_id",
              "displayName": "_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "name",
              "displayName": "name",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "description",
              "displayName": "description",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "level",
              "displayName": "level",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "createdAt",
              "displayName": "createdAt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "updatedAt",
              "displayName": "updatedAt",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "syllabusId",
              "displayName": "syllabusId",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "framework",
              "displayName": "framework",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "language",
              "displayName": "language",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "subTopic",
              "displayName": "subTopic",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2072,
        0
      ],
      "id": "9736c702-db1a-4e1a-8aee-5256387d0da4",
      "name": "Insert Topics",
      "credentials": {
        "postgres": {
          "id": "KkozY7WBDq2aMUhk",
          "name": "Gitgrasp Cloud Database"
        }
      }
    },
    {
      "parameters": {
        "model": "deepseek-coder:6.7b",
        "options": {
          "format": "json"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        0,
        360
      ],
      "id": "d044cd88-70d4-4baf-a8bb-7307c1618535",
      "name": "deepseek-r1",
      "credentials": {
        "ollamaApi": {
          "id": "xHuYe0MDGOs9IpBW",
          "name": "Local Ollama service"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Code Summaries: {{ $json.output }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=Given the following code summaries from a project, group them into topics and subtopics.\n\nFor each, return:\n- Topic (e.g., \"Authentication\")\n- Language used ( One of \"Typescript\", \"Javascript\", \"Json\", \"Yaml/yml\" , \"Bash\", \"Python\", \"Mdx\", \"Css\", \"Html\" \"Misc\", if not identified put in \"Misc\" )\n- Framework (One of \"Next.js\", \"Docker\", \"Node.js\", \"Misc\", if not identified put in \"Misc\")\n- One or more subTopics:\n    - Name\n    - Description\n    - Difficulty level from 1â€“10, representing the depth of mastery required to understand how this concept is used in this project\n\nReturn a JSON array like:\n{\"data\":\n[\n  {\n    \"topic\": \"Authentication\",\n    \"language\": \"Typescript\",\n    \"framework\": \"Next.js\",\n    \"subTopics\": [\n      {\n        \"subTopic\": \"JWT Authentication\",\n        \"description\": \"Handling user authentication via JSON Web Tokens with custom middleware.\",\n        \"level\": 7\n      }\n    ]\n  }\n]}\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        1256,
        0
      ],
      "id": "8fd84f4b-a3cd-46f5-9b35-8fff072406e7",
      "name": "Seperate it into Topic, Difficulty, language, Framework and Subtopic1"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\"data\":\n[\n  {\n    \"topic\": \"Authentication\",\n    \"language\": \"TypeScript\",\n    \"framework\": \"Next.js\",\n    \"subTopics\": [\n      {\n        \"subTopic\": \"JWT Authentication\",\n        \"description\": \"Handling user authentication via JSON Web Tokens with custom middleware.\",\n        \"level\": 7\n      }\n    ]\n  }\n]}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        1404,
        220
      ],
      "id": "a14d0cf2-cc6a-4faa-a348-96d7f341d2e2",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "model": "openai/o3-mini",
        "options": {
          "responseFormat": "json_object"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        1284,
        220
      ],
      "id": "a35cc4a9-9587-41a9-bf3e-43610d8bf5b3",
      "name": "o3-mini",
      "credentials": {
        "openRouterApi": {
          "id": "3ihmfep3vLGcUNKZ",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "value": "quiz_schema",
          "mode": "list",
          "cachedResultName": "quiz_schema"
        },
        "table": {
          "__rl": true,
          "value": "Syllabus",
          "mode": "list",
          "cachedResultName": "Syllabus"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "createdAt": "2025-05-31T23:56:43",
            "updatedAt": "2025-05-31T23:56:45",
            "projectId": "={{ $json.body.projectId }}",
            "_id": "={{ Math.random().toString(36)}}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "_id",
              "displayName": "_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "createdAt",
              "displayName": "createdAt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "updatedAt",
              "displayName": "updatedAt",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "projectId",
              "displayName": "projectId",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        220,
        0
      ],
      "id": "0291db65-66b9-4def-9164-631d5a00e03e",
      "name": "Create Syllabus",
      "credentials": {
        "postgres": {
          "id": "KkozY7WBDq2aMUhk",
          "name": "Gitgrasp Cloud Database"
        }
      }
    }
  ],
  "pinData": {
    "Webhook": [
      {
        "json": {
          "headers": {
            "host": "n8n.bsamaritan.net",
            "user-agent": "axios/1.8.4",
            "content-length": "125",
            "accept": "application/json, text/plain, */*",
            "accept-encoding": "gzip, br",
            "cdn-loop": "cloudflare; loops=1",
            "cf-connecting-ip": "2405:201:c43c:56:5dfd:271e:3298:512",
            "cf-ipcountry": "IN",
            "cf-ray": "95cfeb4bcac389b8-SIN",
            "cf-visitor": "{\"scheme\":\"https\"}",
            "cf-warp-tag-id": "e5f0655a-6ee5-404e-a67c-14d114f0bc98",
            "connection": "keep-alive",
            "content-type": "application/json",
            "x-forwarded-for": "2405:201:c43c:56:5dfd:271e:3298:512",
            "x-forwarded-proto": "https"
          },
          "params": {},
          "query": {},
          "body": {
            "projectId": "cmcxc9kgc00d4w1pwylfl03hn",
            "githubUrl": "https://github.com/anoopkarnik/portfolio-boilerplate",
            "githubToken": ""
          },
          "webhookUrl": "https://n8n.bsamaritan.net/webhook/c0a889f3-3256-4a75-a4b6-067413917ee3",
          "executionMode": "production"
        }
      }
    ]
  },
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Create Syllabus",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get all Files from a Repo": {
      "main": [
        [
          {
            "node": "Code Explainer Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out1": {
      "main": [
        [
          {
            "node": "Insert Topics",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Seperate it into Topic, Difficulty, language, Framework and Subtopic1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code Explainer Agent": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deepseek-coder:6.7b": {
      "ai_languageModel": [
        [
          {
            "node": "Code Explainer Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "deepseek-r1": {
      "ai_languageModel": [
        []
      ]
    },
    "Seperate it into Topic, Difficulty, language, Framework and Subtopic1": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Seperate it into Topic, Difficulty, language, Framework and Subtopic1",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "o3-mini": {
      "ai_languageModel": [
        [
          {
            "node": "Seperate it into Topic, Difficulty, language, Framework and Subtopic1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Create Syllabus": {
      "main": [
        [
          {
            "node": "Get all Files from a Repo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "bce0f292-c392-47e6-9ff0-cc2c9de115cc",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "558d88703fb65b2d0e44613bc35916258b0f0bf983c5d4730c00c424b77ca36a"
  },
  "id": "MSU5rdYWIJIFP52G",
  "tags": []
}